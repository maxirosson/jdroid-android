version = '0.15.0'

ext.JDROID_GITHUB_REPOSITORY_NAME = 'jdroid'

apply from: rootProject.file('libraryVersions.gradle')

apply plugin: 'com.jdroid.component.builder'
apply plugin: 'com.jdroid.root'

buildscript {

	repositories {
		jcenter()
		google()
		maven { url "https://plugins.gradle.org/m2/" }
		String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
		if (localMavenRepo != null) {
			maven { url localMavenRepo }
		}
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	}

	dependencies {

		// https://github.com/maxirosson/jdroid-component-builder/blob/master/CHANGELOG.md
		classpath 'com.jdroidframework:jdroid-component-builder:0.4.0'

		// https://github.com/maxirosson/jdroid-gradle-plugin/blob/master/CHANGELOG.md
		classpath 'com.jdroidframework:jdroid-gradle-root-plugin:0.18.0'
	}
}

allprojects {

	ext.RESOURCE_PREFIX = "jdroid"
	ext.RESOURCE_FILES_TO_SKIP_PREFIX_VALIDATION = ["analytics.xml"]

	buildscript {
		repositories {
			jcenter()
			google()
			String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
			if (localMavenRepo != null) {
				maven { url localMavenRepo }
			}
			maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
		}
	}

    repositories {
		jcenter()
		String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
		if (localMavenRepo != null) {
			maven { url localMavenRepo }
		}
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}
