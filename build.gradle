File propsFile = new File("$project.rootDir/gradle-local.properties")
if (propsFile.exists()) {
	def props = new Properties()
	props.load(new FileInputStream(propsFile))
	props.each { key, val ->
		project.allprojects {
			project.ext.set(key, val)
		}
	}
}

version = "3.0.0"

ext.JDROID_GITHUB_REPOSITORY_NAME = "jdroid-android"

apply from: rootProject.file("libraryVersions.gradle")

apply plugin: "com.jdroid.component.builder"
apply plugin: "com.jdroid.root"

buildscript {

	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		google() {
			mavenContent {
				releasesOnly()
			}
		}
		maven {
			url = "https://maven.fabric.io/public"
			content {
				includeGroup("io.fabric.tools")
			}
		}


		String localMavenRepoEnabled = null
		File propsFile2 = new File("$project.rootDir/gradle-local.properties")
		if (propsFile2.exists()) {
			def props = new Properties()
			props.load(new FileInputStream(propsFile2))
			localMavenRepoEnabled = props.getProperty("LOCAL_MAVEN_REPO_ENABLED")
		}
		if (localMavenRepoEnabled == null) {
			localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		}
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
					content {
						includeGroup("com.jdroidtools")
					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
		gradlePluginPortal()
		mavenCentral() {
			mavenContent {
				releasesOnly()
			}
		}
	}

	dependencies {

		// https://github.com/maxirosson/jdroid-component-builder/blob/master/CHANGELOG.md
		classpath("com.jdroidtools:jdroid-component-builder:2.0.0-SNAPSHOT")

		// https://github.com/maxirosson/jdroid-gradle-plugin/blob/master/CHANGELOG.md
		classpath("com.jdroidtools:jdroid-gradle-root-plugin:2.0.0-SNAPSHOT")
	}
}

allprojects {

	ext.RESOURCE_PREFIX = "jdroid"
	ext.RESOURCE_FILES_TO_SKIP_PREFIX_VALIDATION = ["analytics.xml"]

	buildscript {
		repositories {
			jcenter {
				mavenContent {
					releasesOnly()
				}
			}
			google() {
				mavenContent {
					releasesOnly()
				}
			}
			maven {
				url = "https://maven.fabric.io/public"
				content {
					includeGroup("io.fabric.tools")
				}
			}
			String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
			boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
			if (isLocalMavenRepoEnabled) {
				String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
				if (localMavenRepo != null) {
					maven {
						url = localMavenRepo
						content {
							includeGroup("com.jdroidtools")
						}
					}
				}
			}
			maven {
				url = "https://oss.sonatype.org/content/repositories/snapshots/"
				content {
					includeGroup("com.jdroidtools")
				}
				mavenContent {
					snapshotsOnly()
				}
			}
			gradlePluginPortal()
			mavenCentral() {
				mavenContent {
					releasesOnly()
				}
			}
		}
	}

	repositories {
		jcenter {
			mavenContent {
				releasesOnly()
			}
		}
		String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
					content {
						includeGroup("com.jdroidtools")
					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
			content {
				includeGroup("com.jdroidtools")
			}
			mavenContent {
				snapshotsOnly()
			}
		}
		mavenCentral() {
			mavenContent {
				releasesOnly()
			}
		}
	}
}
