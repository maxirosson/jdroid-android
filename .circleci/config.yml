defaults: &defaults
  working_directory: ~/jdroid
  docker:
    - image: circleci/android:api-28
  environment:
    LOCAL_MAVEN_REPO: ~/repo
    GRADLE_OPTS: -Dorg.gradle.caching=true -Dorg.gradle.daemon=true -Dorg.gradle.parallel=false -Dorg.gradle.jvmargs="-Xmx4g -Xms1g"
    DEX_IN_PROCESS: true
    PRE_DEX_LIBRARIES: false
    JAVA_MAX_HEAP_SIZE: 4096m
version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: Assembling
          command: |
            ./gradlew clean jdroid-android-core:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-about:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-facebook-login:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-firebase-admob:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-firebase-crashlytics:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-firebase-database:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-firebase-fcm:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-firebase-remoteconfig:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-glide:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-google-inappbilling:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-google-maps:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-google-play-games:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-google-signin:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew jdroid-android-room:assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew assembleDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            #./gradlew assembleUat -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
            ./gradlew assembleAutomation --stacktrace
            ./gradlew assembleRelease -PRELEASE_BUILD_TYPE_ENABLED=true -PFAKE_RELEASE_BUILD_TYPE_ENABLED=true --stacktrace

      - save_cache:
          paths:
            - ~/.gradle
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: Saving apks
          command: |
            mkdir -p ~/apks/
            find . -type f -regex ".*/build/outputs/apk/.*apk" -exec cp {} ~/apks/ \;
          when: always
      
      - store_artifacts:
          path: ~/apks
          destination: apks

  test:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run: 
          name: Testing
          command: ./gradlew testDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
      
      - run:
          name: Saving test results 
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/testDebugUnitTest/.*xml" -exec cp {} ~/junit/ \;
          when: always
          
      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ./jdroid-android-about/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-about/tests

      - store_artifacts:
          path: ./jdroid-android-core/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-core/tests

      - store_artifacts:
          path: ./jdroid-android-facebook-login/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-facebook-login/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-admob/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-admob/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-crashlytics/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-crashlytics/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-database/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-database/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-fcm/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-fcm/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-remoteconfig/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-remoteconfig/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-glide/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-glide/tests

      - store_artifacts:
          path: ./jdroid-android-google-inappbilling/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-inappbilling/tests

      - store_artifacts:
          path: ./jdroid-android-google-maps/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-maps/tests

      - store_artifacts:
          path: ./jdroid-android-google-play-games/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-play-games/tests

      - store_artifacts:
          path: ./jdroid-android-google-signin/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-signin/tests

      - store_artifacts:
          path: ./jdroid-android-room/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-room/tests

      - store_artifacts:
          path: ./jdroid-android-sample/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-sample/tests

      - store_artifacts:
          path: ./jdroid-android-twitter/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-twitter/tests


  testUI:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: Assembling automation & android test APKs
          command: |
            ./gradlew :jdroid-android-sample:assembleAutomation :jdroid-android-sample:assembleAndroidTest
            for file in "./jdroid-android-sample/build/outputs/apk/automation"/*.apk; do mv ${file} ./jdroid-android-sample/build/outputs/apk/automation/jdroid-automation.apk; done

      - run:
          name: Authenticating on gcloud
          command: |
            echo "$GOOGLE_SERVICE_ACCOUNT" > /tmp/service-account.json
            gcloud auth activate-service-account --key-file=/tmp/service-account.json --project=jdroid-staging

      - run:
          name: Running Robo tests
          command: gcloud firebase test android run firebase_test_lab.yml:robo-tests-virtual --async --app ./jdroid-android-sample/build/outputs/apk/automation/jdroid-automation.apk

      - run:
          name: Running Instrumentation tests
          command: |
            gcloud firebase test android run firebase_test_lab.yml:instrumentation-tests-physical --async --app ./jdroid-android-sample/build/outputs/apk/automation/jdroid-automation.apk --test ./jdroid-android-sample/build/outputs/apk/androidTest/automation/jdroid-android-sample-automation-androidTest.apk
            gcloud firebase test android run firebase_test_lab.yml:instrumentation-tests-virtual --async --app ./jdroid-android-sample/build/outputs/apk/automation/jdroid-automation.apk --test ./jdroid-android-sample/build/outputs/apk/androidTest/automation/jdroid-android-sample-automation-androidTest.apk

  lint:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run: 
          name: Linting
          command: ./gradlew lintDebug --stacktrace

      - store_artifacts:
          path: ./jdroid-android-about/build/reports/lint-results-debug.html
          destination: jdroid-android-about/lint

      - store_artifacts:
          path: ./jdroid-android-core/build/reports/lint-results-debug.html
          destination: jdroid-android-core/lint

      - store_artifacts:
          path: ./jdroid-android-facebook-login/build/reports/lint-results-debug.html
          destination: jdroid-android-facebook-login/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-admob/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-admob/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-crashlytics/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-crashlytics/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-database/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-database/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-fcm/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-fcm/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-remoteconfig/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-remoteconfig/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-glide/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-glide/lint

      - store_artifacts:
          path: ./jdroid-android-google-inappbilling/build/reports/lint-results-debug.html
          destination: jdroid-android-google-inappbilling/lint

      - store_artifacts:
          path: ./jdroid-android-google-maps/build/reports/lint-results-debug.html
          destination: jdroid-android-google-maps/lint

      - store_artifacts:
          path: ./jdroid-android-google-play-games/build/reports/lint-results-debug.html
          destination: jdroid-android-google-play-games/lint

      - store_artifacts:
          path: ./jdroid-android-google-signin/build/reports/lint-results-debug.html
          destination: jdroid-android-google-signin/lint

      - store_artifacts:
          path: ./jdroid-android-room/build/reports/lint-results-debug.html
          destination: jdroid-android-room/lint

      - store_artifacts:
          path: ./jdroid-android-sample/build/reports/lint-results-debug.html
          destination: jdroid-android-sample/lint

      - store_artifacts:
          path: ./jdroid-android-twitter/build/reports/lint-results-debug.html
          destination: jdroid-android-twitter/lint

  ktlint:
    <<: *defaults
    steps:
      - checkout
      - run: ./gradlew ktlint --stacktrace

  deploy:
    <<: *defaults
    steps:
      - checkout
      
      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: Uploading to Nexus Sonatype
          command: ./gradlew publish -PLOCAL_UPLOAD=false -PRELEASE_BUILD_TYPE_ENABLED=true -PFAKE_RELEASE_BUILD_TYPE_ENABLED=true --info --stacktrace
  
workflows:
  version: 2
  commit:
    jobs:
      - ktlint
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
      - deploy:
          requires:
            - test
            - lint
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - testUI