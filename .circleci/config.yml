defaults: &defaults
  working_directory: ~/jdroid
  docker:
    - image: circleci/android:api-27-alpha
  environment:
    JVM_OPTS: -Xmx3200m
    org.gradle.jvmargs=-Xmx3200M
    LOCAL_MAVEN_REPO: ~/repo
    GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.caching=true
version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run: ./gradlew assemble -PRELEASE_BUILD_TYPE_ENABLED=true -PRELEASE_FAKE_ENABLED=true --stacktrace --scan

      - save_cache:
          paths:
            - ~/.gradle
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run:
          name: Save apks
          command: |
            mkdir -p ~/apks/
            find . -type f -regex ".*/build/outputs/apk/.*apk" -exec cp {} ~/apks/ \;
          when: always
      
      - store_artifacts:
          path: ~/apks
          destination: apks

  test:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run: ./gradlew testDebug -PFIREBASE_PERFORMANCE_MONITORING_ENABLED=false --stacktrace
      
      - run:
          name: Save test results 
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/testDebugUnitTest/.*xml" -exec cp {} ~/junit/ \;
          when: always
          
      - store_test_results:
          path: ~/junit
          
      - store_artifacts:
          path: ./jdroid-android/build/reports/tests/testDebugUnitTest
          destination: jdroid-android/tests
          
      - store_artifacts:
          path: ./jdroid-android-about/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-about/tests

      - store_artifacts:
          path: ./jdroid-android-facebook/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-facebook/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-admob/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-admob/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-crashlytics/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-crashlytics/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-database/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-database/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-fcm/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-fcm/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-instanceid/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-instanceid/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-remoteconfig/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-remoteconfig/tests

      - store_artifacts:
          path: ./jdroid-android-firebase-glide/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-firebase-glide/tests

      - store_artifacts:
          path: ./jdroid-android-google-inappbilling/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-inappbilling/tests

      - store_artifacts:
          path: ./jdroid-android-google-maps/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-maps/tests

      - store_artifacts:
          path: ./jdroid-android-google-plus/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-plus/tests

      - store_artifacts:
          path: ./jdroid-android-google-signin/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-google-signin/tests

      - store_artifacts:
          path: ./jdroid-android-sample/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-sample/tests

      - store_artifacts:
          path: ./jdroid-android-twitter/build/reports/tests/testDebugUnitTest
          destination: jdroid-android-twitter/tests
          
  verify:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: app-{{ .Branch }}-{{ checksum "build.gradle" }}

      - run: ./gradlew lintDebug --stacktrace
      
      - store_artifacts:
          path: ./jdroid-android/build/reports/lint-results-debug.html
          destination: jdroid-android/lint

      - store_artifacts:
          path: ./jdroid-android-about/build/reports/lint-results-debug.html
          destination: jdroid-android-about/lint

      - store_artifacts:
          path: ./jdroid-android-facebook/build/reports/lint-results-debug.html
          destination: jdroid-android-facebook/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-admob/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-admob/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-crashlytics/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-crashlytics/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-database/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-database/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-fcm/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-fcm/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-instanceid/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-instanceid/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-remoteconfig/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-remoteconfig/lint

      - store_artifacts:
          path: ./jdroid-android-firebase-glide/build/reports/lint-results-debug.html
          destination: jdroid-android-firebase-glide/lint

      - store_artifacts:
          path: ./jdroid-android-google-inappbilling/build/reports/lint-results-debug.html
          destination: jdroid-android-google-inappbilling/lint

      - store_artifacts:
          path: ./jdroid-android-google-maps/build/reports/lint-results-debug.html
          destination: jdroid-android-google-maps/lint

      - store_artifacts:
          path: ./jdroid-android-google-plus/build/reports/lint-results-debug.html
          destination: jdroid-android-google-plus/lint

      - store_artifacts:
          path: ./jdroid-android-google-signin/build/reports/lint-results-debug.html
          destination: jdroid-android-google-signin/lint

      - store_artifacts:
          path: ./jdroid-android-sample/build/reports/lint-results-debug.html
          destination: jdroid-android-sample/lint

      - store_artifacts:
          path: ./jdroid-android-twitter/build/reports/lint-results-debug.html
          destination: jdroid-android-twitter/lint

#  verify_nightly:
#    <<: *defaults
#    steps:
#      - checkout
#      - run: echo "Checking code quality on nightly......."
#
#  deploy:
#    <<: *defaults
#    steps:
#      - checkout
#      - run: echo "Deploying sample ......."
  
workflows:
  version: 2
  commit:
    jobs:
      - build
      - test:
          requires:
            - build
      - verify:
          requires:
            - build
#      - deploy:
#          requires:
#            - test
#            - verify
#          filters:
#            branches:
#              only:
#                - master
#                - production
#  nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - verify_nightly:
#          requires:
#            - build
