ext.COMPONENTS = ["jdroid-android", "jdroid-java-okhttp"]
ext.RES_CONFIGS = ["en"]
ext.PROJECT_NAME = "Jdroid Android - Sample"

apply plugin: "com.jdroid.android.application"

description = "Jdroid Sample Android"

repositories {
	jcenter {
		mavenContent {
			releasesOnly()
		}
	}
	mavenCentral()
}

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, "seconds"
}

configurations {
	uatCompile
	automationCompile
}

buildscript {
	dependencies {
		classpath("com.jdroidtools:jdroid-gradle-android-plugin:${JDROID_GRADLE_PLUGIN_VERSION}")
	}
}

dependencies {
	implementation("androidx.multidex:multidex:2.0.1")
	implementation project(":jdroid-android-core")
	implementation project(":jdroid-android-about")
	implementation project(":jdroid-android-facebook-login")
	implementation project(":jdroid-android-firebase-admob")
	implementation project(":jdroid-android-firebase-crashlytics")
	implementation project(":jdroid-android-glide")
	implementation project(":jdroid-android-google-maps")
	implementation project(":jdroid-android-google-inappbilling")
	implementation project(":jdroid-android-firebase-database")
	implementation project(":jdroid-android-firebase-fcm")
	implementation project(":jdroid-android-firebase-remoteconfig")
	implementation project(":jdroid-android-google-signin")
	implementation project(":jdroid-android-google-play-games")
	implementation project(":jdroid-android-sqlite")
	implementation project(":jdroid-android-room")
	implementation project(":jdroid-android-twitter")
	implementation("com.firebase:firebase-client-android:2.5.0")

	annotationProcessor("com.github.bumptech.glide:compiler:${GLIDE_VERSION}")

	if (jdroid.propertyResolver.getBooleanProp("JDROID_JAVA_AS_PROJECT_DEPENDENCY", false)) {
		implementation(project(":jdroid-java-firebase-database")) {
			exclude module: "slf4j-api"
			exclude group: "com.firebase", module: "firebase-client-jvm"
			exclude module: "jdroid-java-core"
		}
	} else {
		implementation("com.jdroidtools:jdroid-java-firebase-database:${JDROID_JAVA_VERSION}") {
			exclude module: "slf4j-api"
			exclude group: "com.firebase", module: "firebase-client-jvm"
			exclude module: "jdroid-java-core"
		}
	}
	if (jdroid.propertyResolver.getBooleanProp("JDROID_JAVA_HTTP_AS_PROJECT_DEPENDENCY", false)) {
		implementation project(":jdroid-java-http-okhttp")
	} else {
		implementation("com.jdroidtools:jdroid-java-http-okhttp:${JDROID_JAVA_HTTP_VERSION}") {
			exclude module: "slf4j-api"
			exclude module: "jdroid-java-core"
		}
	}
	if (jdroid.propertyResolver.getBooleanProp("JDROID_JAVA_FIREBASE_DYNAMICLINKS_AS_PROJECT_DEPENDENCY", false)) {
		implementation project(":jdroid-java-firebase-dynamiclink")
	} else {
		implementation("com.jdroidtools:jdroid-java-firebase-dynamiclinks:1.0.0") {
			exclude module: "slf4j-api"
			exclude module: "jdroid-java-core"
		}
	}

	annotationProcessor("androidx.room:room-compiler:${ROOM_VERSION}")

	// TODO Remove this when Glide fix the androidx support: https://github.com/bumptech/glide/issues/3185
	implementation("com.android.support:support-annotations:28.0.0")
	annotationProcessor("com.android.support:support-annotations:28.0.0")

	testImplementation("junit:junit:${JUNIT_VERSION}")
	testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}")
	androidTestImplementation("androidx.test.espresso:espresso-core:3.1.1")
	androidTestImplementation("androidx.test.espresso:espresso-contrib:3.1.1")
	androidTestImplementation("androidx.test:runner:1.1.1")
}

String adMobAppId = "ca-app-pub-4654922738884963~4242524943"
android {

	defaultConfig {

		applicationId = "com.jdroid.android.sample"

		jdroid.setBuildConfigBoolean(defaultConfig, "DEBUG_SETTINGS_ENABLED", false)
		jdroid.setBuildConfigBoolean(defaultConfig, "STRICT_MODE_ENABLED", false)
		jdroid.setBuildConfigBoolean(defaultConfig, "LEAK_CANARY_ENABLED", false)

		jdroid.setBuildConfigBoolean(defaultConfig, "FIREBASE_ANALYTICS_ENABLED", true)
		jdroid.setBuildConfigBoolean(defaultConfig, "FIREBASE_PERFORMANCE_MONITORING_ENABLED", true)
		jdroid.setBuildConfigBoolean(defaultConfig, "FIREBASE_CRASHLYTICS_ENABLED", true)

		jdroid.setBuildConfigString(defaultConfig, "GOOGLE_SERVER_CLIENT_ID", "527857945512-qr7kk98nntlt44po5cblnrgq41ief65s.apps.googleusercontent.com")

		jdroid.setBuildConfigString(defaultConfig, "LOCAL_IP")

		jdroid.setBuildConfigString(defaultConfig, "INSTALLATION_SOURCE", "GooglePlay")

		jdroid.setBuildConfigBoolean(defaultConfig, "ADS_ENABLED", true)
		jdroid.setBuildConfigString(defaultConfig, "ADMOB_APP_ID", adMobAppId)
		jdroid.setBuildConfigString(defaultConfig, "DEFAULT_AD_UNIT_ID", "ca-app-pub-4654922738884963/8672724544")

		jdroid.setBuildConfigString(defaultConfig, "GOOGLE_PLAY_PUBLIC_KEY")

		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_AUTH_TOKEN")

		jdroid.setBuildConfigString(defaultConfig, "TWITTER_OAUTH_CONSUMER_KEY")
		jdroid.setBuildConfigString(defaultConfig, "TWITTER_OAUTH_CONSUMER_SECRET")

		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_DYNAMIC_LINKS_DOMAIN", "euv8z.app.goo.gl")
		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_WEB_API_KEY", "AIzaSyCcwMZ25CMtubXhcW3I7NVTybckPu0Dwtg")

		manifestPlaceholders = [
			googleMapsApiKey: "AIzaSyA2UZNjUMaw7kFk9qvHeGLTppXxcgI3l1Y",
			facebookAppId   : "fb1048902711862195",
			adMobAppId      : adMobAppId
		]

		multiDexEnabled = true

		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
			}
		}

		testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
		testBuildType = "automation"
	}


	buildTypes {

		debug {
			signingConfig = signingConfigs.debug

			applicationIdSuffix = ".debug"

			jdroid.setBuildConfigBoolean(buildTypes.debug, "DEBUG_SETTINGS_ENABLED", true)
			jdroid.setBuildConfigString(buildTypes.debug, "SERVER_NAME", "DEV")
		}

		uat {
			signingConfig = signingConfigs.debug
			applicationIdSuffix = ".debug"
			debuggable = true
			matchingFallbacks = ["debug"]

			jdroid.setBuildConfigString(buildTypes.uat, "SERVER_NAME", "UAT")
		}

		automation {
			signingConfig = signingConfigs.debug
			applicationIdSuffix ".debug"
			debuggable = true
			matchingFallbacks = ["debug"]

			jdroid.setBuildConfigString(buildTypes.automation, "SERVER_NAME", "UAT")
		}

		if (jdroid.isReleaseBuildTypeEnabled()) {
			release {

				if (jdroid.isFakeReleaseBuildTypeEnabled()) {
					signingConfig = signingConfigs.debug
					debuggable = true
				} else {

					signingConfig = signingConfigs.release
					debuggable = jdroid.isReleaseBuildTypeDebuggable()

					jdroid.setBuildConfigString(buildTypes.release, "SERVER_NAME", "PROD")

					// TODO Add GOOGLE_PLAY_PUBLIC_KEY
					// TODO Add FIREBASE_AUTH_TOKEN
					// TODO Add GOOGLE_SERVER_CLIENT_ID

					manifestPlaceholders = [
						googleMapsApiKey: jdroid.propertyResolver.getStringProp("GOOGLE_MAPS_API_KEY", ""),
						facebookAppId   : jdroid.propertyResolver.getStringProp("FACEBOOK_APP_ID", "")
					]
				}
			}
		}
	}

	sourceSets.uat {
		java.srcDirs = ["src/debug/java", "src/uat/java"]
		resources.srcDirs = ["src/debug/resources", "src/uat/resources"]
		res.srcDirs = ["src/debug/res", "src/uat/res"]
	}

	sourceSets.automation {
		java.srcDirs = ["src/debug/java", "src/automation/java"]
		resources.srcDirs = ["src/debug/resources", "src/automation/resources"]
		res.srcDirs = ["src/debug/res", "src/automation/res"]
	}

	sourceSets.test.java.srcDirs += "build/generated/source/r/debug"
	sourceSets.test.java.srcDirs += sourceSets.main.java.srcDirs
	sourceSets.test.java.srcDirs += sourceSets.debug.java.srcDirs
	sourceSets.test.resources.srcDirs += sourceSets.main.resources.srcDirs
	sourceSets.test.resources.srcDirs += sourceSets.debug.resources.srcDirs
	sourceSets.test.res.srcDirs += sourceSets.main.res.srcDirs
	sourceSets.test.res.srcDirs += sourceSets.debug.res.srcDirs
}

apply plugin: "com.google.gms.google-services"
