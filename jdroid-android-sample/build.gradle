ext.COMPONENTS = ['jdroid-android', 'jdroid-java-okhttp']
ext.RES_CONFIGS = ['en', 'es']
ext.PROJECT_NAME = 'Jdroid Android - Sample'
apply plugin: 'com.jdroid.android.application'

description = 'Jdroid Sample Android'

jdroid {
	notDefaultLanguages = ['es']
}

repositories {
	jcenter()
}

configurations.all {
	// check for updates every build
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
	uatCompile
	automationCompile
}

buildscript {
	dependencies {
		classpath "com.jdroidframework:jdroid-gradle-android-plugin:${JDROID_GRADLE_PLUGIN_VERSION}"
	}
}

dependencies {
	implementation 'com.android.support:multidex:1.0.2'
	implementation project(':jdroid-android')
	implementation project(':jdroid-android-uil')
	implementation project(':jdroid-android-about')
	implementation project(':jdroid-android-facebook')
	implementation project(':jdroid-android-firebase-instanceid')
	implementation project(':jdroid-android-firebase-admob')
	implementation project(':jdroid-android-firebase-crash')
	implementation project(':jdroid-android-google-maps')
	implementation project(':jdroid-android-google-inappbilling')
	implementation project(':jdroid-android-firebase-database')
	implementation project(':jdroid-android-firebase-fcm')
	implementation project(':jdroid-android-firebase-remoteconfig')
	implementation project(':jdroid-android-google-signin')
	implementation project(':jdroid-android-twitter')
	implementation 'com.firebase:firebase-client-android:2.5.0'

	if (jdroid.getBooleanProp("JDROID_JAVA_AS_PROJECT_DEPENDENCY", false)) {
		implementation(project(':jdroid-java-firebase-database')) {
			exclude module: 'slf4j-api'
			exclude group: 'com.firebase', module: 'firebase-client-jvm'
			exclude module: 'jdroid-java-core'
		}
	} else {
		implementation("com.jdroidframework:jdroid-java-firebase-database:${JDROID_JAVA_VERSION}") {
			exclude module: 'slf4j-api'
			exclude group: 'com.firebase', module: 'firebase-client-jvm'
			exclude module: 'jdroid-java-core'
		}
	}
	if (jdroid.getBooleanProp("JDROID_JAVA_HTTP_AS_PROJECT_DEPENDENCY", false)) {
		implementation project(":jdroid-java-http-okhttp")
	} else {
		implementation("com.jdroidframework:jdroid-java-http-okhttp:${JDROID_JAVA_HTTP_VERSION}") {
			exclude module: 'slf4j-api'
			exclude module: 'jdroid-java-core'
		}
	}
	if (jdroid.getBooleanProp("JDROID_JAVA_FIREBASE_DYNAMICLINKS_AS_PROJECT_DEPENDENCY", false)) {
		implementation project(":jdroid-java-firebase-dynamiclink")
	} else {
		implementation("com.jdroidframework:jdroid-java-firebase-dynamiclinks:0.1.0") {
			exclude module: 'slf4j-api'
			exclude module: 'jdroid-java-core'
		}
	}
	testImplementation "junit:junit:${JUNIT_VERSION}"
	testImplementation "org.robolectric:robolectric:${ROBOLECTRIC_VERSION}"
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	}
	androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:2.2.2', {
		exclude group: 'com.android.support'
	}
	androidTestImplementation 'com.android.support.test:runner:0.5', {
		exclude group: 'com.android.support', module: 'support-annotations'
	}
}


android {

	defaultConfig {

		applicationId 'com.jdroid.android.sample'

		jdroid.setBuildConfigBoolean(defaultConfig, "STRICT_MODE_ENABLED", false)
		jdroid.setBuildConfigBoolean(defaultConfig, "LEAK_CANARY_ENABLED", false)
		jdroid.setBuildConfigBoolean(defaultConfig, "FIREBASE_ANALYTICS_ENABLED", true)

		jdroid.setBuildConfigBoolean(defaultConfig, "GOOGLE_ANALYTICS_ENABLED", true)
		jdroid.setBuildConfigString(defaultConfig, "GOOGLE_ANALYTICS_TRACKING_ID", "UA-84573310-1")

		jdroid.setBuildConfigString(defaultConfig, "GOOGLE_SERVER_CLIENT_ID", "852072465140-ksbqqoidt2jl2nqqvffnc6ic07fqb6g8.apps.googleusercontent.com")

		jdroid.setBuildConfigString(defaultConfig, "LOCAL_IP")

		jdroid.setBuildConfigString(defaultConfig, "INSTALLATION_SOURCE", "GooglePlay")

		jdroid.setBuildConfigBoolean(defaultConfig, "ADS_ENABLED", true)
		jdroid.setBuildConfigString(defaultConfig, "ADMOB_APP_ID", "ca-app-pub-4654922738884963~4242524943")
		jdroid.setBuildConfigString(defaultConfig, "DEFAULT_AD_UNIT_ID", "ca-app-pub-4654922738884963/8672724544")

		jdroid.setBuildConfigString(defaultConfig, "GOOGLE_PLAY_PUBLIC_KEY")

		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_URL")
		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_AUTH_TOKEN")

		jdroid.setBuildConfigString(defaultConfig, "TWITTER_OAUTH_CONSUMER_KEY")
		jdroid.setBuildConfigString(defaultConfig, "TWITTER_OAUTH_CONSUMER_SECRET")

		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_DYNAMIC_LINKS_DOMAIN", "euv8z.app.goo.gl")
		jdroid.setBuildConfigString(defaultConfig, "FIREBASE_WEB_API_KEY", "AIzaSyCcwMZ25CMtubXhcW3I7NVTybckPu0Dwtg")

		// Used by Google Sign In. {YOUR_CLIENT}/oauth_client/client_id (client_type == 3)
		jdroid.setResValueString(defaultConfig, "default_web_client_id", "527857945512-qr7kk98nntlt44po5cblnrgq41ief65s.apps.googleusercontent.com")

		// Used by Firebase Database. project_info/firebase_url
		jdroid.setResValueString(defaultConfig, "firebase_database_url", "https://jdroid-staging.firebaseio.com")

		// project_info/project_number
		jdroid.setResValueString(defaultConfig, "gcm_defaultSenderId", "527857945512")

		// {YOUR_CLIENT}/api_key/current_key
		jdroid.setResValueString(defaultConfig, "google_api_key", "AIzaSyDNAyitlL4PWxNCjf63Quf0ruvcFSzs6D0")

		// {YOUR_CLIENT}/client_info/mobilesdk_app_id
		jdroid.setResValueString(defaultConfig, "google_app_id", "1:527857945512:android:04da523460c0b69f")

		// Used by Firebase Crash. {YOUR_CLIENT}/api_key/current_key
		jdroid.setResValueString(defaultConfig, "google_crash_reporting_api_key", "AIzaSyDNAyitlL4PWxNCjf63Quf0ruvcFSzs6D0")

		// project_info/storage_bucket
		jdroid.setResValueString(defaultConfig, "google_storage_bucket", "jdroid-staging.appspot.com")

		manifestPlaceholders = [
				googleMapsApiKey: "AIzaSyA2UZNjUMaw7kFk9qvHeGLTppXxcgI3l1Y",
				facebookAppId: "fb1048902711862195"
		]

		multiDexEnabled true

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		testBuildType "automation"
	}


	buildTypes {

		debug {
			signingConfig signingConfigs.debug

			applicationIdSuffix ".debug"

			jdroid.setBuildConfigString(buildTypes.debug, "SERVER_NAME", "DEV")
		}

		uat {
			signingConfig signingConfigs.debug
			applicationIdSuffix ".debug"
			debuggable true
			matchingFallbacks = ['debug']

			jdroid.setBuildConfigString(buildTypes.uat, "SERVER_NAME", "UAT")

		}

		automation {
			signingConfig signingConfigs.debug
			applicationIdSuffix ".debug"
			debuggable true
			matchingFallbacks = ['debug']

			jdroid.setBuildConfigString(buildTypes.automation, "SERVER_NAME", "UAT")
		}

		if (jdroid.isReleaseBuildTypeEnabled()) {
			release {

				if (jdroid.getBooleanProp("RELEASE_FAKE_ENABLED", false)) {
					signingConfig signingConfigs.debug
					debuggable true
				} else {

					signingConfig signingConfigs.release

					debuggable jdroid.getBooleanProp('DEBUGGABLE', false)

					jdroid.setBuildConfigString(buildTypes.release, "SERVER_NAME", "PROD")

					// TODO Add GOOGLE_PLAY_PUBLIC_KEY
					// TODO Add GOOGLE_ANALYTICS_TRACKING_ID
					// TODO Add FIREBASE_AUTH_TOKEN
					// TODO Add GOOGLE_SERVER_CLIENT_ID

					// Used by Google Sign In. {YOUR_CLIENT}/oauth_client/client_id (client_type == 3)
					jdroid.setResValueString(defaultConfig, "default_web_client_id", "361779001695-1h1mk78pnrvlfvti8mfpcs7hbgrpcddu.apps.googleusercontent.com")

					// Used by Firebase Database. project_info/firebase_url
					jdroid.setResValueString(defaultConfig, "firebase_database_url", "https://fir-jdroid-production.firebaseio.com")

					// project_info/project_number
					jdroid.setResValueString(defaultConfig, "gcm_defaultSenderId", "361779001695")

					// {YOUR_CLIENT}/api_key/current_key
					jdroid.setResValueString(defaultConfig, "google_api_key", "AIzaSyDe-x-lkKP2VyeMYq8i0I5mbeDAElY6Pks")

					// {YOUR_CLIENT}/client_info/mobilesdk_app_id
					jdroid.setResValueString(defaultConfig, "google_app_id", "1:361779001695:android:85398d20b5634ada")

					// Used by Firebase Crash. {YOUR_CLIENT}/api_key/current_key
					jdroid.setResValueString(defaultConfig, "google_crash_reporting_api_key", "AIzaSyDe-x-lkKP2VyeMYq8i0I5mbeDAElY6Pks")

					// project_info/storage_bucket
					jdroid.setResValueString(defaultConfig, "google_storage_bucket", "fir-jdroid-production.appspot.com")

					manifestPlaceholders = [
							googleMapsApiKey: jdroid.getStringProp("GOOGLE_MAPS_API_KEY", ""),
							facebookAppId: jdroid.getStringProp("FACEBOOK_APP_ID", "")
					]
				}
			}
		}
	}

	sourceSets.uat {
		java.srcDirs = ['src/debug/java', 'src/uat/java']
		resources.srcDirs = ['src/debug/resources', 'src/uat/resources']
		res.srcDirs = ['src/debug/res', 'src/uat/res']
	}

	sourceSets.automation {
		java.srcDirs = ['src/debug/java', 'src/automation/java']
		resources.srcDirs = ['src/debug/resources', 'src/automation/resources']
		res.srcDirs = ['src/debug/res', 'src/automation/res']
	}

	sourceSets.test.java.srcDirs += "build/generated/source/r/debug"
	sourceSets.test.java.srcDirs += sourceSets.main.java.srcDirs
	sourceSets.test.java.srcDirs += sourceSets.debug.java.srcDirs
	sourceSets.test.resources.srcDirs += sourceSets.main.resources.srcDirs
	sourceSets.test.resources.srcDirs += sourceSets.debug.resources.srcDirs
	sourceSets.test.res.srcDirs += sourceSets.main.res.srcDirs
	sourceSets.test.res.srcDirs += sourceSets.debug.res.srcDirs
}
